// Mocks generated by Mockito 5.4.4 from annotations
// in UnlockMe/test/controllers/login_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:get/get.dart' as _i3;
import 'package:hive_flutter/hive_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:sqflite/sqflite.dart' as _i4;
import 'package:UnlockMe/core/app_storage.dart' as _i5;
import 'package:UnlockMe/core/services/hive_service.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBox_0<E> extends _i1.SmartFake implements _i2.Box<E> {
  _FakeBox_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_1<T> extends _i1.SmartFake
    implements _i3.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_2 extends _i1.SmartFake implements _i4.Database {
  _FakeDatabase_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBike_3 extends _i1.SmartFake implements _i5.Bike {
  _FakeBike_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HiveService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveService extends _i1.Mock implements _i6.HiveService {
  MockHiveService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<dynamic> get reserveBox => (super.noSuchMethod(
        Invocation.getter(#reserveBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#reserveBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  _i2.Box<dynamic> get userBox => (super.noSuchMethod(
        Invocation.getter(#userBox),
        returnValue: _FakeBox_0<dynamic>(
          this,
          Invocation.getter(#userBox),
        ),
      ) as _i2.Box<dynamic>);

  @override
  _i3.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_1<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i3.InternalFinalCallback<void>);

  @override
  _i3.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_1<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i3.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> openBoxes() => (super.noSuchMethod(
        Invocation.method(
          #openBoxes,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> closeHive() => (super.noSuchMethod(
        Invocation.method(
          #closeHive,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> setReserve(
    int? reserveId,
    String? endsAt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReserve,
          [
            reserveId,
            endsAt,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setReserveId(int? reserveId) => (super.noSuchMethod(
        Invocation.method(
          #setReserveId,
          [reserveId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setReserveEndsAtId(String? endsAt) => (super.noSuchMethod(
        Invocation.method(
          #setReserveEndsAtId,
          [endsAt],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteReserve() => (super.noSuchMethod(
        Invocation.method(
          #deleteReserve,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setUserId(int? userId) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setHotelId(int? userHotelId) => (super.noSuchMethod(
        Invocation.method(
          #setHotelId,
          [userHotelId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteHotelId() => (super.noSuchMethod(
        Invocation.method(
          #deleteHotelId,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setUserRoute(
    int? userRouteId,
    String? userRouteStartsAt,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserRoute,
          [
            userRouteId,
            userRouteStartsAt,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteUserRoute() => (super.noSuchMethod(
        Invocation.method(
          #deleteUserRoute,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i5.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i4.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i7.Future<_i4.Database>.value(_FakeDatabase_2(
          this,
          Invocation.getter(#database),
        )),
      ) as _i7.Future<_i4.Database>);

  @override
  _i7.Future<void> populateWithFakeData() => (super.noSuchMethod(
        Invocation.method(
          #populateWithFakeData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clearDatabase() => (super.noSuchMethod(
        Invocation.method(
          #clearDatabase,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> closeDatabase() => (super.noSuchMethod(
        Invocation.method(
          #closeDatabase,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteAndRecreateDatabase() => (super.noSuchMethod(
        Invocation.method(
          #deleteAndRecreateDatabase,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<Map<String, dynamic>>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);

  @override
  _i7.Future<int> updateUser(
    int? id,
    Map<String, dynamic>? user,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [
            id,
            user,
          ],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> insertUser(_i5.User? user) => (super.noSuchMethod(
        Invocation.method(
          #insertUser,
          [user],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<_i5.User?> getUser(String? email) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [email],
        ),
        returnValue: _i7.Future<_i5.User?>.value(),
      ) as _i7.Future<_i5.User?>);

  @override
  _i7.Future<int> deleteUser(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [id],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> insertBike(_i5.Bike? bike) => (super.noSuchMethod(
        Invocation.method(
          #insertBike,
          [bike],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<List<_i5.Bike>> getUserBikes() => (super.noSuchMethod(
        Invocation.method(
          #getUserBikes,
          [],
        ),
        returnValue: _i7.Future<List<_i5.Bike>>.value(<_i5.Bike>[]),
      ) as _i7.Future<List<_i5.Bike>>);

  @override
  _i7.Future<List<_i5.Bike>> getBikes() => (super.noSuchMethod(
        Invocation.method(
          #getBikes,
          [],
        ),
        returnValue: _i7.Future<List<_i5.Bike>>.value(<_i5.Bike>[]),
      ) as _i7.Future<List<_i5.Bike>>);

  @override
  _i7.Future<_i5.Bike> getBikeById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getBikeById,
          [id],
        ),
        returnValue: _i7.Future<_i5.Bike>.value(_FakeBike_3(
          this,
          Invocation.method(
            #getBikeById,
            [id],
          ),
        )),
      ) as _i7.Future<_i5.Bike>);

  @override
  _i7.Future<_i5.Bike?> getBikeByQrCode(
    String? qrCode,
    int? hotelId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBikeByQrCode,
          [
            qrCode,
            hotelId,
          ],
        ),
        returnValue: _i7.Future<_i5.Bike?>.value(),
      ) as _i7.Future<_i5.Bike?>);

  @override
  _i7.Future<void> updateBikeStatus(
    int? bikeId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBikeStatus,
          [
            bikeId,
            status,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<int> updateBike(
    int? id,
    Map<String, dynamic>? bike,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBike,
          [
            id,
            bike,
          ],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> deleteBike(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteBike,
          [id],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> insertReserve(_i5.Reserve? reserve) => (super.noSuchMethod(
        Invocation.method(
          #insertReserve,
          [reserve],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<List<_i5.Reserve>> getReserves() => (super.noSuchMethod(
        Invocation.method(
          #getReserves,
          [],
        ),
        returnValue: _i7.Future<List<_i5.Reserve>>.value(<_i5.Reserve>[]),
      ) as _i7.Future<List<_i5.Reserve>>);

  @override
  _i7.Future<int> updateReserve(
    int? id,
    Map<String, dynamic>? reserve,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReserve,
          [
            id,
            reserve,
          ],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<void> updateReserveStatus(
    int? reserveId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReserveStatus,
          [
            reserveId,
            status,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<int> deleteReserve(int? reserveId) => (super.noSuchMethod(
        Invocation.method(
          #deleteReserve,
          [reserveId],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<_i5.Reserve?> getActiveReserveForUser(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveReserveForUser,
          [userId],
        ),
        returnValue: _i7.Future<_i5.Reserve?>.value(),
      ) as _i7.Future<_i5.Reserve?>);

  @override
  _i7.Future<int> insertRoute(_i5.Route? route) => (super.noSuchMethod(
        Invocation.method(
          #insertRoute,
          [route],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<void> updateRouteEnd(
    int? routeId,
    double? endLatitude,
    double? endLongitude,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRouteEnd,
          [
            routeId,
            endLatitude,
            endLongitude,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i5.Route>> getRoutesByUserId(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRoutesByUserId,
          [userId],
        ),
        returnValue: _i7.Future<List<_i5.Route>>.value(<_i5.Route>[]),
      ) as _i7.Future<List<_i5.Route>>);

  @override
  _i7.Future<_i5.Route?> getCurrentRouteForUser(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentRouteForUser,
          [userId],
        ),
        returnValue: _i7.Future<_i5.Route?>.value(),
      ) as _i7.Future<_i5.Route?>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i5.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set id(int? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lastname(String? _lastname) => super.noSuchMethod(
        Invocation.setter(
          #lastname,
          _lastname,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as String);

  @override
  set email(String? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#password),
        ),
      ) as String);

  @override
  set password(String? _password) => super.noSuchMethod(
        Invocation.setter(
          #password,
          _password,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set hotelId(int? _hotelId) => super.noSuchMethod(
        Invocation.setter(
          #hotelId,
          _hotelId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
